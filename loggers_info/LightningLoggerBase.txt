<class 'pytorch_lightning.loggers.base.LightningLoggerBase'>
Here is the list of contents
__module__
pytorch_lightning.loggers.base
__doc__
Base class for experiment loggers.

    Args:
        agg_key_funcs:
            Dictionary which maps a metric name to a function, which will
            aggregate the metric values for the same steps.
        agg_default_func:
            Default function to aggregate metric values. If some metric name
            is not presented in the `agg_key_funcs` dictionary, then the
            `agg_default_func` will be used for aggregation.

    Note:
        The `agg_key_funcs` and `agg_default_func` arguments are used only when
        one logs metrics with the :meth:`~LightningLoggerBase.agg_and_log_metrics` method.
    
__init__
<function LightningLoggerBase.__init__ at 0x0000021BFC485310>
after_save_checkpoint
<function LightningLoggerBase.after_save_checkpoint at 0x0000021BFC4853A0>
update_agg_funcs
<function LightningLoggerBase.update_agg_funcs at 0x0000021BFC485430>
experiment
<property object at 0x0000021BFAEDDBD0>
_aggregate_metrics
<function LightningLoggerBase._aggregate_metrics at 0x0000021BFC485550>
_reduce_agg_metrics
<function LightningLoggerBase._reduce_agg_metrics at 0x0000021BFC4855E0>
_finalize_agg_metrics
<function LightningLoggerBase._finalize_agg_metrics at 0x0000021BFC485670>
agg_and_log_metrics
<function LightningLoggerBase.agg_and_log_metrics at 0x0000021BFC485700>
log_metrics
<function LightningLoggerBase.log_metrics at 0x0000021BFC485790>
_convert_params
<staticmethod object at 0x0000021BFAEE5160>
_sanitize_callable_params
<staticmethod object at 0x0000021BFC48A3D0>
_flatten_dict
<staticmethod object at 0x0000021BFC48A400>
_sanitize_params
<staticmethod object at 0x0000021BFC48A460>
log_hyperparams
<function LightningLoggerBase.log_hyperparams at 0x0000021BFC485A60>
log_graph
<function LightningLoggerBase.log_graph at 0x0000021BFC485AF0>
log_text
<function LightningLoggerBase.log_text at 0x0000021BFC485B80>
log_image
<function LightningLoggerBase.log_image at 0x0000021BFC485C10>
save
<function LightningLoggerBase.save at 0x0000021BFC485CA0>
finalize
<function LightningLoggerBase.finalize at 0x0000021BFC485D30>
close
<function LightningLoggerBase.close at 0x0000021BFC485DC0>
save_dir
<property object at 0x0000021BFC48D180>
group_separator
<property object at 0x0000021BFC48D1D0>
name
<property object at 0x0000021BFC48D220>
version
<property object at 0x0000021BFC48D270>
_add_prefix
<function LightningLoggerBase._add_prefix at 0x0000021BFC48F0D0>
__dict__
<attribute '__dict__' of 'LightningLoggerBase' objects>
__weakref__
<attribute '__weakref__' of 'LightningLoggerBase' objects>
__abstractmethods__
frozenset({'name', 'log_hyperparams', 'experiment', 'log_metrics', 'version'})
_abc_impl
<_abc._abc_data object at 0x0000021BFC4903C0>
<class 'pytorch_lightning.loggers.base.LightningLoggerBase'>
Here is the list of contents
__module__
pytorch_lightning.loggers.base
__doc__
Base class for experiment loggers.

    Args:
        agg_key_funcs:
            Dictionary which maps a metric name to a function, which will
            aggregate the metric values for the same steps.
        agg_default_func:
            Default function to aggregate metric values. If some metric name
            is not presented in the `agg_key_funcs` dictionary, then the
            `agg_default_func` will be used for aggregation.

    Note:
        The `agg_key_funcs` and `agg_default_func` arguments are used only when
        one logs metrics with the :meth:`~LightningLoggerBase.agg_and_log_metrics` method.
    
__init__
<function LightningLoggerBase.__init__ at 0x0000025ACE635310>
after_save_checkpoint
<function LightningLoggerBase.after_save_checkpoint at 0x0000025ACE6353A0>
update_agg_funcs
<function LightningLoggerBase.update_agg_funcs at 0x0000025ACE635430>
experiment
<property object at 0x0000025ACD0AEE50>
_aggregate_metrics
<function LightningLoggerBase._aggregate_metrics at 0x0000025ACE635550>
_reduce_agg_metrics
<function LightningLoggerBase._reduce_agg_metrics at 0x0000025ACE6355E0>
_finalize_agg_metrics
<function LightningLoggerBase._finalize_agg_metrics at 0x0000025ACE635670>
agg_and_log_metrics
<function LightningLoggerBase.agg_and_log_metrics at 0x0000025ACE635700>
log_metrics
<function LightningLoggerBase.log_metrics at 0x0000025ACE635790>
_convert_params
<staticmethod object at 0x0000025ACD0B6160>
_sanitize_callable_params
<staticmethod object at 0x0000025ACE63A3D0>
_flatten_dict
<staticmethod object at 0x0000025ACE63A400>
_sanitize_params
<staticmethod object at 0x0000025ACE63A460>
log_hyperparams
<function LightningLoggerBase.log_hyperparams at 0x0000025ACE635A60>
log_graph
<function LightningLoggerBase.log_graph at 0x0000025ACE635AF0>
log_text
<function LightningLoggerBase.log_text at 0x0000025ACE635B80>
log_image
<function LightningLoggerBase.log_image at 0x0000025ACE635C10>
save
<function LightningLoggerBase.save at 0x0000025ACE635CA0>
finalize
<function LightningLoggerBase.finalize at 0x0000025ACE635D30>
close
<function LightningLoggerBase.close at 0x0000025ACE635DC0>
save_dir
<property object at 0x0000025ACE63D130>
group_separator
<property object at 0x0000025ACE63D180>
name
<property object at 0x0000025ACE63D1D0>
version
<property object at 0x0000025ACE63D220>
_add_prefix
<function LightningLoggerBase._add_prefix at 0x0000025ACE6400D0>
__dict__
<attribute '__dict__' of 'LightningLoggerBase' objects>
__weakref__
<attribute '__weakref__' of 'LightningLoggerBase' objects>
__abstractmethods__
frozenset({'log_metrics', 'name', 'experiment', 'version', 'log_hyperparams'})
_abc_impl
<_abc._abc_data object at 0x0000025ACE63F840>
