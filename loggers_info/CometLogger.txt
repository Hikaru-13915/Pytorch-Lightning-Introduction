<class 'pytorch_lightning.loggers.comet.CometLogger'>
Here is the list of contents
__module__
pytorch_lightning.loggers.comet
__doc__

    Log using `Comet.ml <https://www.comet.ml>`_.

    Install it with pip:

    .. code-block:: bash

        pip install comet-ml

    Comet requires either an API Key (online mode) or a local directory path (offline mode).

    **ONLINE MODE**

    .. code-block:: python

        import os
        from pytorch_lightning import Trainer
        from pytorch_lightning.loggers import CometLogger

        # arguments made to CometLogger are passed on to the comet_ml.Experiment class
        comet_logger = CometLogger(
            api_key=os.environ.get("COMET_API_KEY"),
            workspace=os.environ.get("COMET_WORKSPACE"),  # Optional
            save_dir=".",  # Optional
            project_name="default_project",  # Optional
            rest_api_key=os.environ.get("COMET_REST_API_KEY"),  # Optional
            experiment_key=os.environ.get("COMET_EXPERIMENT_KEY"),  # Optional
            experiment_name="default",  # Optional
        )
        trainer = Trainer(logger=comet_logger)

    **OFFLINE MODE**

    .. code-block:: python

        from pytorch_lightning.loggers import CometLogger

        # arguments made to CometLogger are passed on to the comet_ml.Experiment class
        comet_logger = CometLogger(
            save_dir=".",
            workspace=os.environ.get("COMET_WORKSPACE"),  # Optional
            project_name="default_project",  # Optional
            rest_api_key=os.environ.get("COMET_REST_API_KEY"),  # Optional
            experiment_name="default",  # Optional
        )
        trainer = Trainer(logger=comet_logger)

    Args:
        api_key: Required in online mode. API key, found on Comet.ml. If not given, this
            will be loaded from the environment variable COMET_API_KEY or ~/.comet.config
            if either exists.
        save_dir: Required in offline mode. The path for the directory to save local
            comet logs. If given, this also sets the directory for saving checkpoints.
        project_name: Optional. Send your experiment to a specific project.
            Otherwise will be sent to Uncategorized Experiments.
            If the project name does not already exist, Comet.ml will create a new project.
        rest_api_key: Optional. Rest API key found in Comet.ml settings.
            This is used to determine version number
        experiment_name: Optional. String representing the name for this particular experiment on Comet.ml.
        experiment_key: Optional. If set, restores from existing experiment.
        offline: If api_key and save_dir are both given, this determines whether
            the experiment will be in online or offline mode. This is useful if you use
            save_dir to control the checkpoints directory and have a ~/.comet.config
            file but still want to run offline experiments.
        prefix: A string to put at the beginning of metric keys.
        \**kwargs: Additional arguments like `workspace`, `log_code`, etc. used by
            :class:`CometExperiment` can be passed as keyword arguments in this logger.

    Raises:
        ModuleNotFoundError:
            If required Comet package is not installed on the device.
        MisconfigurationException:
            If neither ``api_key`` nor ``save_dir`` are passed as arguments.
    
LOGGER_JOIN_CHAR
-
__init__
<function CometLogger.__init__ at 0x0000025ACEF1DDC0>
experiment
<property object at 0x0000025ACEF1BE00>
log_hyperparams
<function CometLogger.log_hyperparams at 0x0000025ACEF20040>
log_metrics
<function CometLogger.log_metrics at 0x0000025ACEF20160>
reset_experiment
<function CometLogger.reset_experiment at 0x0000025ACEF201F0>
finalize
<function CometLogger.finalize at 0x0000025ACEF20310>
save_dir
<property object at 0x0000025ACEF1BEF0>
name
<property object at 0x0000025ACEF1BF40>
version
<property object at 0x0000025ACEF1BF90>
__getstate__
<function CometLogger.__getstate__ at 0x0000025ACEF20550>
log_graph
<function CometLogger.log_graph at 0x0000025ACEF205E0>
__abstractmethods__
frozenset()
_abc_impl
<_abc._abc_data object at 0x0000025ACEF21580>
