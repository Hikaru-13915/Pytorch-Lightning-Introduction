<class 'pytorch_lightning.loggers.test_tube.TestTubeLogger'>
Here is the list of contents
__module__
pytorch_lightning.loggers.test_tube
__doc__

    Log to local file system in `TensorBoard <https://www.tensorflow.org/tensorboard>`_ format
    but using a nicer folder structure (see `full docs <https://williamfalcon.github.io/test-tube>`_).

    Warning:
        The test-tube package is no longer maintained and PyTorch Lightning will remove the :class:ÅLTestTubeLoggerÅL
        in v1.7.0.

    Install it with pip:

    .. code-block:: bash

        pip install test_tube

    .. code-block:: python

        from pytorch_lightning import Trainer
        from pytorch_lightning.loggers import TestTubeLogger

        logger = TestTubeLogger("tt_logs", name="my_exp_name")
        trainer = Trainer(logger=logger)

    Use the logger anywhere in your :class:`~pytorch_lightning.core.lightning.LightningModule` as follows:

    .. code-block:: python

        from pytorch_lightning import LightningModule


        class LitModel(LightningModule):
            def training_step(self, batch, batch_idx):
                # example
                self.logger.experiment.whatever_method_summary_writer_supports(...)

            def any_lightning_module_function_or_hook(self):
                self.logger.experiment.add_histogram(...)

    Args:
        save_dir: Save directory
        name: Experiment name. Defaults to ``'default'``.
        description: A short snippet about this experiment
        debug: If ``True``, it doesn't log anything.
        version: Experiment version. If version is not specified the logger inspects the save
            directory for existing versions, then automatically assigns the next available version.
        create_git_tag: If ``True`` creates a git tag to save the code used in this experiment.
        log_graph: Adds the computational graph to tensorboard. This requires that
            the user has defined the `self.example_input_array` attribute in their
            model.
        prefix: A string to put at the beginning of metric keys.

    Raises:
        ModuleNotFoundError:
            If required TestTube package is not installed on the device.
    
__test__
False
LOGGER_JOIN_CHAR
-
__init__
<function TestTubeLogger.__init__ at 0x0000025AD02E3DC0>
experiment
<property object at 0x0000025AD02E1B80>
log_hyperparams
<function TestTubeLogger.log_hyperparams at 0x0000025AD02E8040>
log_metrics
<function TestTubeLogger.log_metrics at 0x0000025AD02E8160>
log_graph
<function TestTubeLogger.log_graph at 0x0000025AD02E8280>
save
<function TestTubeLogger.save at 0x0000025AD02E83A0>
finalize
<function TestTubeLogger.finalize at 0x0000025AD02E84C0>
close
<function TestTubeLogger.close at 0x0000025AD02E85E0>
save_dir
<property object at 0x0000025AD02E1C20>
name
<property object at 0x0000025AD02E1BD0>
version
<property object at 0x0000025AD02E1C70>
__getstate__
<function TestTubeLogger.__getstate__ at 0x0000025AD02E8820>
__setstate__
<function TestTubeLogger.__setstate__ at 0x0000025AD02E88B0>
__abstractmethods__
frozenset()
_abc_impl
<_abc._abc_data object at 0x0000025AD02E5C00>
